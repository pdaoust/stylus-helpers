/* rhythm(fontsize, baseline, margintop, marginbottom, squash) applies a vertical
 * rhythm to a block-level element. Arguments:
 *
 * 		fontsize: the font size, relative to the base font size
 *
 * 		baseline: the baseline grid unit that we should snap the element's
 * 		line-height to
 *
 * 		margintop, marginbottom: the number of baseline units to add above and
 * 		below the element. Note: this is *baseline units*, not multiples of the
 * 		element's new line-height.
 *
 * 		squash: a float value specifying how much tolerance the line-height
 * 		should have for squashing. 1 means the line-height will never be smaller
 * 		than 1; <1 means it may be squashed; >1 means it must have extra
 */

rhythm(fontsize = 1em, baseline = 1.5em, margintop = 1, marginbottom = 1, squash = 1) {
	ratio = (fontsize / baseline) * squash;
	if ratio <= 1 { // anything from 1 baseline unit down to ½ units stays in the same baseline grid
		lineheight = baseline / fontsize;
		if ratio <= 0.5 { // anything ½ baseline unit and below gets two lines per baseline unit
			newbaseline = lineheight / fontsize;
		} else {
			newbaseline = baseline;
		}
	} else {
		if ratio <= 2 { // anything above 1 baseline unit gets 2 baseline units per line
			ratio = 2;
		} else if ratio <= 3 { // or even 3!
			ratio = 3;
		} else if ratio <= 4 { // how about 4? But not 5; that's crazy.
			ratio = 4;
		}
		lineheight = baseline * ratio / fontsize;
		newbaseline = baseline / fontsize;
	}
	font-size: fontsize;
	line-height: lineheight;
	margin-top: unit(newbaseline * margintop, em);
	margin-bottom: unit(newbaseline * marginbottom, em);
}
